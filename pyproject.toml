[project]
name = "prism_pruner"
description = "Prism Pruner"
license = "MIT"
version = "0.0.1"
readme = "README.md"
keywords = []
authors = [{name = "NicolÃ² Tampellini", email = "nicolo.tampellini@yale.edu"}]
requires-python = ">=3.12"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-arm64"]

[tool.pixi.pypi-dependencies]
prism_pruner = { path = ".", editable = true }
networkx = ">=3.0"
numpy = ">=2.0"
periodictable = "*"
scipy = ">=1.10"

[tool.pixi.environments]
default = { solve-group = "default" }
dev = { features = ["dev"], solve-group = "default"}

[tool.pixi.feature.dev.tasks]
fmt = { cmd="ruff format ." }
lint = { cmd="ruff check . --fix" }
types = { cmd="mypy" }
test = { cmd="pytest" }
all = { depends-on = ["fmt", "lint", "types", "test"] }

[tool.pixi.feature.dev.dependencies]
pytest = ">=8.3"
pytest-cov = ">=7.0"
ruff = ">=0.11"
mypy = ">=1.15"
pre-commit = ">=4.2"
jupyter = "*"

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    "B",  # bugbear
    "D",  # pydocstyle
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming conventions
    "W",  # pycodestyle warnings
    "C4", # comprehensions
    "PL", # pylint
    "PT", # flake8-pytest-style
    "PIE", # misc lints
    "PYI", # flake8-pyi
    "TID", # tidy imports
    "TCH", # type-checking imports
    "RUF", # Ruff-specific rules
    "RSE", # flake8-raise
    "ICN001", # unconventional-import-alias
]
ignore = [
    "N806", # Non-lowercase variable in function
    "PLR0911", # Too many returns
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments to function call
    "PLR0914", # Too many locals
    "PLR0915", # Too many statements
    "PLR1702", # Too many nested-blocks
    "PLR2004", # Magic value comparison
    "PT013", # Incorrect import of `pytest`
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.mypy]
files = ["prism_pruner", "tests"]
strict = true
pretty = true

[[tool.mypy.overrides]]
module = "scipy.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "networkx.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "periodictable.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests", "prism_pruner"]
addopts = "--doctest-modules"
doctest_optionflags = "NORMALIZE_WHITESPACE"
markers = [
  "timing: tests used to generate timings",
]
